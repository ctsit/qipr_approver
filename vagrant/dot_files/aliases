
alias hist='history | less'
alias refresh='. ~/.bashrc'
alias ali='vim ~/.bash_aliases'

alias restart_apache='      sudo service apache2 restart'
alias view_apache_modules=' sudo apache2ctl -M'
alias view_apache_ver='     sudo apachectl -V'
alias restart_mysql='       sudo service mysql restart'
alias restart_shibd='       sudo /etc/init.d/shibd restart'

alias clear_apache_err='    sudo rm /var/log/apache2/error.log'
alias tail_apache_err='     echo /var/log/apache2/error.log     && sudo tail -f /var/log/apache2/error.log'
alias log_apache_err='      echo /var/log/apache2/error.log     && sudo vim /var/log/apache2/error.log'
alias tail_apache_access='  echo /var/log/apache2/access.log    && sudo tail -f /var/log/apache2/access.log'
alias log_apache_access='   echo /var/log/apache2/access.log    && sudo vim /var/log/apache2/access.log'


alias ssl_enable='      sudo apachectl configtest && a2enmod ssl'
alias ssl_check='       openssl s_client -connect localhost:443  | grep subject'
alias ssl_view_cert='   openssl x509 -in /etc/apache2/ssl/some.crt  -noout -text'

alias ls='ls -h --color=auto'
alias lsa='ls -al'
alias lss='ls -ltr'
alias dua='du -hcs'
alias duf="du -h --max-depth=1 ./ | sort -n -r"
alias cdd='cd ..'

alias big='du -hcs * | grep -E "M|G"'
alias big_find='find ./ -size +10000k  | xargs ls -hsS'
alias big_10='ls -hsS | head -10'
alias fin='find . -iname'

alias gst='git status'
alias glog='git log'
alias gdiff='git diff'
alias gdif='git diff --cached'
alias gb='git branch'
alias gp='git remote -v'
alias gf='git show --name-status'
alias gan='git blame'
alias grepa="nice ack-grep -i --ignore-dir=.ropeproject"


function show() {
   # credits: http://stackoverflow.com/questions/402377/using-getopts-in-bash-shell-script-to-get-long-and-short-command-line-options
   list=''
   status_only=no
   show_help=no

   set -- $(getopt fh "$@")
   while [ $# -gt 0 ]
      do
   case "$1" in
         (-f) status_only=yes;;
         (-h) show_help=yes;;
         (-c) list="$list $2"; shift;;
         (--) shift; break;;
         (-*) echo "$0: error - unrecognized option $1" 1>&2; exit 1;;
         (*)  break;;
         esac
         shift
   done

   if [[ $# -lt 1 ]] || [[ "yes" == "$show_help" ]] ; then
      echo 'Usage: '
      echo '   show [-f file status only] [-h help] commit_index'
      return
   fi

   # validate the index
   re='^[0-9]+$'
   if ! [[ "$1" =~ $re ]]; then
      echo "The commit index must be an integer " >&2
      return
   fi

   if [[ "yes" == "$status_only" ]]; then
      git log --format='%H' -"$1" | tail -1 | xargs git show --name-status
      #git log --pretty=oneline  | nl | grep " $1\t"  |  cut  -f2 | cut -d ' ' -f1 | xargs git show --name-status
   else
      git log --format='%H' -"$1" | tail -1 | xargs git show
   fi
}
